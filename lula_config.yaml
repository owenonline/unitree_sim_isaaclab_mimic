# The robot description defines the generalized coordinates and how to map those
# to the underlying URDF dofs.

api_version: 1.0

# Defines the generalized coordinates. Each generalized coordinate is assumed
# to have an entry in the URDF.
# Lula will only use these joints to control the robot position.
cspace:
    - left_shoulder_pitch_joint
    - right_shoulder_pitch_joint
    - left_shoulder_roll_joint
    - right_shoulder_roll_joint
    - left_shoulder_yaw_joint
    - right_shoulder_yaw_joint
    - left_elbow_joint
    - right_elbow_joint
    - left_wrist_roll_joint
    - right_wrist_roll_joint
    - left_wrist_pitch_joint
    - right_wrist_pitch_joint
    - left_wrist_yaw_joint
    - right_wrist_yaw_joint
default_q: [
    0.0296,0.0295,-0.0023,0.0026,0.0002,1e-04,0.0353,0.0354,-0.0002,0.0002,0.0141,0.0141,1e-04,-0.0
]

acceleration_limits: [
   10,10,10,10,10,10,10,10,10,10,10,10,10,10
]

jerk_limits: [
   10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000
]

# Most dimensions of the cspace have a direct corresponding element
# in the URDF. This list of rules defines how unspecified coordinates
# should be extracted or how values in the URDF should be overwritten.

cspace_to_urdf_rules:
    - {name: left_hip_pitch_joint, rule: fixed, value: 0.0097}
    - {name: right_hip_pitch_joint, rule: fixed, value: 0.0097}
    - {name: waist_yaw_joint, rule: fixed, value: -0.0}
    - {name: left_hip_roll_joint, rule: fixed, value: 0.0006}
    - {name: right_hip_roll_joint, rule: fixed, value: -0.0006}
    - {name: waist_roll_joint, rule: fixed, value: -0.0027}
    - {name: left_hip_yaw_joint, rule: fixed, value: -1e-04}
    - {name: right_hip_yaw_joint, rule: fixed, value: 1e-04}
    - {name: waist_pitch_joint, rule: fixed, value: 0.1269}
    - {name: left_knee_joint, rule: fixed, value: 0.0021}
    - {name: right_knee_joint, rule: fixed, value: 0.0021}
    - {name: left_ankle_pitch_joint, rule: fixed, value: 0.0007}
    - {name: right_ankle_pitch_joint, rule: fixed, value: 0.0007}
    - {name: left_ankle_roll_joint, rule: fixed, value: 0.0}
    - {name: right_ankle_roll_joint, rule: fixed, value: -0.0}
    - {name: left_hand_index_0_joint, rule: fixed, value: 0.0}
    - {name: left_hand_middle_0_joint, rule: fixed, value: 0.0}
    - {name: left_hand_thumb_0_joint, rule: fixed, value: -0.0}
    - {name: right_hand_index_0_joint, rule: fixed, value: -0.0}
    - {name: right_hand_middle_0_joint, rule: fixed, value: -0.0}
    - {name: right_hand_thumb_0_joint, rule: fixed, value: -0.0}
    - {name: left_hand_index_1_joint, rule: fixed, value: -0.0}
    - {name: left_hand_middle_1_joint, rule: fixed, value: 0.0}
    - {name: left_hand_thumb_1_joint, rule: fixed, value: 0.0002}
    - {name: right_hand_index_1_joint, rule: fixed, value: 0.0}
    - {name: right_hand_middle_1_joint, rule: fixed, value: -0.0}
    - {name: right_hand_thumb_1_joint, rule: fixed, value: -0.0002}
    - {name: left_hand_thumb_2_joint, rule: fixed, value: 0.0}
    - {name: right_hand_thumb_2_joint, rule: fixed, value: -0.0}

# Lula uses collision spheres to define the robot geometry in order to avoid
# collisions with external obstacles.  If no spheres are specified, Lula will
# not be able to avoid obstacles.

collision_spheres:
